name: SharpSoft.App CD

# https://bitplatform.dev/templates/dev-ops

env:
  API_SERVER_ADDRESS: 'https://bp.bitplatform.dev/'
  APP_SERVICE_NAME: 'app-service-bp-test'
  IOS_CODE_SIGN_PROVISION: 'SharpSoft.App'

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:

  build_api_blazor:
    name: build api + blazor web
    runs-on: ubuntu-22.04

    steps:
    
    - name: Checkout source code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    # - name: Enable pre rendering
    #   run:  sed -i 's/public static readonly bool PrerenderEnabled = false;/public static readonly bool PrerenderEnabled = true;/g' src/Client/SharpSoft.App.Client.Core/Services/AppRenderMode.cs
        
    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'src/Client/SharpSoft.App.Client.Core/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

    - name: Install wasm
      run:  cd src && dotnet workload install wasm-tools wasm-experimental
      
    - name: Generate CSS/JS files
      run: dotnet build src/Client/SharpSoft.App.Client.Core/SharpSoft.App.Client.Core.csproj -t:BeforeBuildTasks --no-restore

    - name: Publish
      run: dotnet publish src/SharpSoft.App.Server/SharpSoft.App.Server.csproj -c Release --self-contained -r linux-x64 -o ${{env.DOTNET_ROOT}}/server

    - name: Build migrations bundle
      run: |
        cd src/SharpSoft.App.Server/ && dotnet tool restore && dotnet ef migrations bundle --self-contained -r linux-x64 --project SharpSoft.App.Server.csproj

    - name: Upload ef migrations bundle
      uses: actions/upload-artifact@v4
      with:
        name: migrations-bundle
        path: src/SharpSoft.App.Server/efbundle

    - name: Upload server artifact
      uses: actions/upload-artifact@v4
      with:
        name: server-bundle
        path: ${{env.DOTNET_ROOT}}/server

  deploy_api_blazor:
    name: deploy api + blazor
    needs: build_api_blazor
    runs-on: ubuntu-22.04
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:

      - name: Retrieve server bundle
        uses: actions/download-artifact@v4
        with:
          name: server-bundle

      - name: Retrieve migrations bundle
        uses: actions/download-artifact@v4
        with:
          name: migrations-bundle

      - name: Update appsettings.json
        uses: devops-actions/variable-substitution@v1.2 
        with:
          files: 'appsettings.json'
        env:
          ConnectionStrings_SqlServerConnectionString: ${{ secrets.DB_CONNECTION_STRING }}
          AppSettings_IdentitySettings_IdentityCertificatePassword: ${{ secrets.API_IDENTITY_CERTIFICATE_PASSWORD }}

      - name: Delete IdentityCertificate.pfx
        run: |
            rm IdentityCertificate.pfx

      - name: Extract identity certificate from env
        uses: timheuer/base64-to-file@v1.2
        with:
            fileDir: './'
            fileName: 'IdentityCertificate.pfx'
            encodedString: ${{ secrets.API_IDENTITY_CERTIFICATE_FILE_BASE64 }}

      - name: Run migrations
        run: |
            chmod +x efbundle
            ./efbundle
            rm efbundle

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_PUBLISH_PROFILE }}
          package: .

  
  build_blazor_hybrid_android:
    name: build blazor hybrid (android)
    runs-on: ubuntu-22.04
  
    steps:
     
    - name: Checkout source code
      uses: actions/checkout@v4
     
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - uses: actions/setup-node@v4
      with:
        node-version: 20
  
    - name: Extract Android signing key from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './src/Client/SharpSoft.App.Client.Maui/'
          fileName: 'SharpSoft.App.keystore'
          encodedString: ${{ secrets.ANDROID_RELEASE_KEYSTORE_FILE_BASE64 }}
  
    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'src/Client/SharpSoft.App.Client.Core/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

    - name: Install maui
      run: cd src && dotnet workload install maui-android

    - name: Install Android Sdk platform tools
      run: ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools"
  
    - name: Generate CSS/JS files
      run: |
          dotnet build src/Client/SharpSoft.App.Client.Core/SharpSoft.App.Client.Core.csproj -t:BeforeBuildTasks --no-restore
          dotnet build src/Client/SharpSoft.App.Client.Maui/SharpSoft.App.Client.Maui.csproj -t:BeforeBuildTasks --no-restore
  
    - name: Build aab
      run: dotnet build src/Client/SharpSoft.App.Client.Maui/SharpSoft.App.Client.Maui.csproj -c Release -p:AndroidPackageFormat=aab -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="SharpSoft.App.keystore" -p:AndroidSigningKeyAlias=SharpSoft.App -p:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -p:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -f net8.0-android
  
    - name: Build apk
      run: dotnet build src/Client/SharpSoft.App.Client.Maui/SharpSoft.App.Client.Maui.csproj -c Release -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="SharpSoft.App.keystore" -p:AndroidSigningKeyAlias=SharpSoft.App -p:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" -p:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -f net8.0-android
  
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: android-bundle
        path: src/Client/SharpSoft.App.Client.Maui/bin/Release/net8.0-android/*-Signed.*

  build_blazor_hybrid_iOS:
    name: build blazor hybrid (iOS-macOS)
    runs-on: macos-14
  
    steps:
     
    - name: Checkout source code
      uses: actions/checkout@v4
     
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.3'

    - uses: actions/setup-node@v4
      with:
        node-version: 20
  
    - name: Update appsettings.json api server address
      uses: devops-actions/variable-substitution@v1.2 
      with:
        files: 'src/Client/SharpSoft.App.Client.Core/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

    - name: Install maui
      run: cd src && dotnet workload install maui
  
    - name: Extract iOS code signing certificate from env
      uses: timheuer/base64-to-file@v1.2
      with:
          fileDir: './'
          fileName: 'DistributionCert.p12'
          encodedString: ${{ secrets.APPSTORE_CODE_SIGNING_CERTIFICATE_FILE_BASE64 }}

    - name: Import Code-Signing Certificates
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-filepath: './DistributionCert.p12'
        p12-password: ${{ secrets.APPSTORE_CODE_SIGNING_CERTIFICATE_FILE_PASSWORD }}

    - name: Download Apple Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.companyname.sharpsoft.app'
        issuer-id: ${{ secrets.APPSTORE_API_KEY_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_KEY_PRIVATE_KEY }}

    - name: Generate CSS/JS files
      run: |
          dotnet build src/Client/SharpSoft.App.Client.Core/SharpSoft.App.Client.Core.csproj -t:BeforeBuildTasks --no-restore
          dotnet build src/Client/SharpSoft.App.Client.Maui/SharpSoft.App.Client.Maui.csproj -t:BeforeBuildTasks --no-restore
  
    - name: Build ipa
      run: dotnet publish src/Client/SharpSoft.App.Client.Maui/SharpSoft.App.Client.Maui.csproj -p:RuntimeIdentifier=ios-arm64 -c Release -p:ArchiveOnBuild=true -p:CodesignKey="iPhone Distribution" -p:CodesignProvision="${{ env.IOS_CODE_SIGN_PROVISION }}" -p:ApplicationDisplayVersion="${{ vars.APPLICATION_DISPLAY_VERSION }}" -p:ApplicationVersion="${{ vars.APPLICATION_VERSION }}" -f net8.0-ios

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: iOS-bundle
        path: src/Client/SharpSoft.App.Client.Maui/bin/release/net8.0-ios/ios-arm64/publish/*.ipa
